{"version":3,"sources":["pages/unblock/util/match.tsx","pages/unblock/constant/configTypeLabelMap.ts","pages/unblock/component/UnblockWebRestrictionsConfigForm.tsx","pages/unblock/component/UnblockWebRestrictionsConfigList.tsx","pages/unblock/UnblockWebRestrictionsConfig.tsx"],"names":[],"mappings":"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","file":"UnblockWebRestrictionsConfig.862826d1.js","sourceRoot":"..\\src","sourcesContent":["export function match(\r\n  href: URL,\r\n  config:\r\n    | string\r\n    | { type: 'domain' | 'link' | 'linkPrefix' | 'regex'; url: string },\r\n) {\r\n  if (typeof config === 'string') {\r\n    return href.host.includes(config)\r\n  } else {\r\n    const {type, url} = config\r\n    switch (type) {\r\n      case 'domain':\r\n        return href.host.includes(url)\r\n      case 'link':\r\n        return href.href === url\r\n      case 'linkPrefix':\r\n        return href.href.startsWith(url)\r\n      case 'regex':\r\n        return new RegExp(url).test(href.href)\r\n    }\r\n  }\r\n}\r\n","export const configTypeLabelMap: Record<TypeEnum, string> = {\n  domain: '域名',\n  link: '链接',\n  linkPrefix: '链接前缀',\n  regex: '正则表达式',\n}\n","import { Button, Form, Input, message, Select } from 'antd'\nimport { match } from '../util/match'\nimport { configTypeLabelMap } from '../constant/configTypeLabelMap'\nimport * as React from 'react'\n\n/**\n * 配置新增表单\n */\nconst UnblockWebRestrictionsConfigForm: React.FC<{\n  onReload: () => void\n}> = props => {\n  const [form] = Form.useForm()\n\n  function onReset() {\n    form.resetFields()\n  }\n\n  function onFinish(values: Record<string, string>) {\n    const _values = values as {\n      type: TypeEnum\n      url: string\n      tempUrl: string\n    }\n    if (!match(new URL(_values.tempUrl), _values)) {\n      message.warn('测试需要匹配的 URL 未能匹配！')\n      return\n    }\n    window.configBlockApi.add({\n      type: _values.type,\n      url: _values.url,\n    })\n    message.success('添加成功')\n    props.onReload()\n    onReset()\n  }\n\n  return (\n    <Form form={form} onFinish={onFinish} layout={'vertical'}>\n      <Form.Item\n        label={'匹配模式'}\n        name={'type'}\n        rules={[{ required: true, message: '匹配模式没有选择' }]}\n      >\n        <Select\n          options={Object.entries(configTypeLabelMap).map(([value, label]) => ({\n            label,\n            value,\n          }))}\n        />\n      </Form.Item>\n      <Form.Item\n        label={'匹配值'}\n        name={'url'}\n        rules={[{ required: true, message: '匹配值不能为空' }]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item\n        label={'测试需要匹配的 URL'}\n        name={'tempUrl'}\n        rules={[\n          { required: true, message: '测试需要匹配的 URL 不能为空' },\n          {\n            type: 'url',\n            message: '测试需要匹配的 URL 必须是个 URL 啊喂 (#`O′)',\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item>\n        <Button\n          type=\"primary\"\n          htmlType={'submit'}\n          style={{\n            marginRight: 8,\n          }}\n        >\n          提交\n        </Button>\n        <Button htmlType={'reset'} onClick={onReset}>\n          清空\n        </Button>\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default UnblockWebRestrictionsConfigForm\n","import * as React from 'react'\nimport { Button, List, Switch, Tag } from 'antd'\nimport { configTypeLabelMap } from '../constant/configTypeLabelMap'\n\ntype PropsType = {\n  list: BlockConfig[]\n  onRemove: (config: BlockConfig) => void\n  onSwitch: (config: BlockConfig) => void\n}\n\n/**\n * 屏蔽列表\n */\nconst UnblockWebRestrictionsConfigList: React.FC<PropsType> = props => {\n  return (\n    <div>\n      <h2>本地屏蔽配置列表</h2>\n      <List\n        dataSource={props.list}\n        renderItem={(config: BlockConfig, i: number) => (\n          <List.Item\n            key={i}\n            actions={[\n              <Switch\n                checked={config.enable}\n                onChange={() => props.onSwitch(config)}\n              />,\n              <Button\n                type={'danger' as any}\n                onClick={() => props.onRemove(config)}\n              >\n                删除\n              </Button>,\n            ]}\n          >\n            <List.Item.Meta\n              title={\n                <div>\n                  <Tag>{configTypeLabelMap[config.type]}</Tag>\n                  <span\n                    style={{\n                      overflow: 'hidden',\n                      textOverflow: 'ellipsis',\n                      whiteSpace: 'nowrap',\n                    }}\n                    title={config.url}\n                  >\n                    {config.type === 'regex' ? (\n                      config.url\n                    ) : (\n                      <a\n                        href={\n                          (config.type === 'domain' ? 'https://' : '') +\n                          config.url\n                        }\n                      >\n                        {config.url}\n                      </a>\n                    )}\n                  </span>\n                </div>\n              }\n              description={<div>{config.enable}</div>}\n            />\n          </List.Item>\n        )}\n      />\n    </div>\n  )\n}\n\nexport default UnblockWebRestrictionsConfigList\n","import * as React from 'react'\r\nimport { useState } from 'react'\r\nimport { Button, message, Result } from 'antd'\r\nimport UnblockWebRestrictionsConfigForm from './component/UnblockWebRestrictionsConfigForm'\r\nimport UnblockWebRestrictionsConfigList from './component/UnblockWebRestrictionsConfigList'\r\nimport BasicLayoutCard from '../../components/layout/BasicLayoutCard'\r\nimport LayoutEmpty from '../../components/layout/LayoutEmpty'\r\n\r\ntype PropsType = {}\r\n\r\nconst configBlockApi =\r\n  window['com.rxliuli.UnblockWebRestrictions.configBlockApi']\r\n\r\nconst UnblockWebRestrictionsConfig: React.FC<PropsType> = () => {\r\n  if (!configBlockApi) {\r\n    return (\r\n      <LayoutEmpty\r\n        title=\"您还未安装解除网页禁止复制/粘贴的脚本\"\r\n        href={'https://greasyfork.org/zh-CN/scripts/391193'}\r\n      />\r\n    )\r\n  }\r\n\r\n  const [configList, setConfigList] = useState(() => configBlockApi.list())\r\n\r\n  function handleReload() {\r\n    const list = configBlockApi.list()\r\n    setConfigList(list)\r\n    console.log('reload: ', list)\r\n  }\r\n  function handleClear() {\r\n    configBlockApi.clear()\r\n    handleReload()\r\n    message.success('清空成功')\r\n  }\r\n\r\n  async function handleUpdate() {\r\n    await configBlockApi.update()\r\n    handleReload()\r\n    message.success('更新成功')\r\n  }\r\n\r\n  function handleRemove(config: BlockConfig) {\r\n    console.log('remove key: ', config.key)\r\n    configBlockApi.remove(config.key)\r\n    handleReload()\r\n    message.success('删除成功')\r\n  }\r\n\r\n  function handleSwitch(config: BlockConfig) {\r\n    console.log('handleSwitch: ', config)\r\n    configBlockApi.switch(config.key)\r\n    handleReload()\r\n  }\r\n\r\n  return (\r\n    <BasicLayoutCard\r\n      title={'配置页'}\r\n      extra={\r\n        <div>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={handleClear}\r\n            style={{ marginRight: 8 }}\r\n          >\r\n            清空\r\n          </Button>\r\n          <Button type=\"primary\" onClick={handleUpdate}>\r\n            更新\r\n          </Button>\r\n        </div>\r\n      }\r\n    >\r\n      <UnblockWebRestrictionsConfigForm onReload={handleReload} />\r\n      <UnblockWebRestrictionsConfigList\r\n        list={configList}\r\n        onRemove={handleRemove}\r\n        onSwitch={handleSwitch}\r\n      />\r\n    </BasicLayoutCard>\r\n  )\r\n}\r\n\r\nexport default UnblockWebRestrictionsConfig\r\n"]}