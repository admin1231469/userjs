{"version":3,"sources":["components/layout/BasicLayoutCard.tsx","components/layout/LayoutEmpty.tsx","pages/unblock/constant/configTypeLabelMap.ts","pages/unblock/component/UnblockWebRestrictionsConfigForm.tsx","pages/unblock/util/match.tsx","pages/unblock/component/UnblockWebRestrictionsConfigList.tsx","pages/unblock/UnblockWebRestrictionsConfig.tsx"],"names":["BasicLayoutCard","props","style","width","overflowY","LayoutEmpty","title","extra","type","href","configTypeLabelMap","domain","link","linkPrefix","regex","UnblockWebRestrictionsConfigForm","Form","useForm","form","onReset","resetFields","onFinish","values","_values","config","host","includes","url","startsWith","RegExp","test","match","URL","tempUrl","message","warn","window","configBlockApi","add","success","onReload","layout","Item","label","name","rules","required","options","Object","entries","map","value","htmlType","marginRight","onClick","UnblockWebRestrictionsConfigList","dataSource","list","renderItem","i","key","actions","checked","enable","onChange","onSwitch","onRemove","Meta","overflow","textOverflow","whiteSpace","description","UnblockWebRestrictionsConfigNotEmpty","useState","configList","setConfigList","handleReload","console","log","a","update","clear","remove","switch","UnblockWebRestrictionsConfig"],"mappings":"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","file":"static/js/8.0d1450b4.chunk.js","sourcesContent":["import * as React from 'react'\r\nimport { CardProps } from 'antd/lib/card'\r\nimport { Card } from 'antd'\r\n\r\ntype PropsType = CardProps & {}\r\n\r\nconst BasicLayoutCard: React.FC<PropsType> = props => {\r\n  return (\r\n    <Card\r\n      style={{\r\n        width: '100%',\r\n        overflowY: 'auto',\r\n      }}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport default BasicLayoutCard\r\n","import * as React from 'react'\r\nimport { Result, Button } from 'antd'\r\n\r\ntype PropsType = {\r\n  title: string\r\n  href: string\r\n}\r\n\r\nconst LayoutEmpty: React.FC<PropsType> = (props) => {\r\n  return (\r\n    <Result\r\n      style={{\r\n        width: '100%',\r\n      }}\r\n      title={props.title}\r\n      extra={\r\n        <Button type={'primary'} href={props.href}>\r\n          去安装脚本\r\n        </Button>\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nexport default LayoutEmpty\r\n","export const configTypeLabelMap: Record<TypeEnum, string> = {\r\n  domain: '域名',\r\n  link: '链接',\r\n  linkPrefix: '链接前缀',\r\n  regex: '正则表达式',\r\n}\r\n","import { Button, Form, Input, message, Select } from 'antd'\r\nimport { match } from '../util/match'\r\nimport { configTypeLabelMap } from '../constant/configTypeLabelMap'\r\nimport * as React from 'react'\r\n\r\n/**\r\n * 配置新增表单\r\n */\r\nconst UnblockWebRestrictionsConfigForm: React.FC<{\r\n  onReload: () => void\r\n}> = (props) => {\r\n  const [form] = Form.useForm()\r\n\r\n  function onReset() {\r\n    form.resetFields()\r\n  }\r\n\r\n  function onFinish(values: Record<string, string>) {\r\n    const _values = values as {\r\n      type: TypeEnum\r\n      url: string\r\n      tempUrl: string\r\n    }\r\n    if (!match(new URL(_values.tempUrl), _values)) {\r\n      message.warn('测试需要匹配的 URL 未能匹配！')\r\n      return\r\n    }\r\n    window.configBlockApi.add({\r\n      type: _values.type,\r\n      url: _values.url,\r\n    })\r\n    message.success('添加成功')\r\n    props.onReload()\r\n    onReset()\r\n  }\r\n\r\n  return (\r\n    <Form form={form} onFinish={onFinish} layout={'vertical'}>\r\n      <Form.Item\r\n        label={'匹配模式'}\r\n        name={'type'}\r\n        rules={[{ required: true, message: '匹配模式没有选择' }]}\r\n      >\r\n        <Select\r\n          options={Object.entries(configTypeLabelMap).map(([value, label]) => ({\r\n            label,\r\n            value,\r\n          }))}\r\n        />\r\n      </Form.Item>\r\n      <Form.Item\r\n        label={'匹配值'}\r\n        name={'url'}\r\n        rules={[{ required: true, message: '匹配值不能为空' }]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n      <Form.Item\r\n        label={'测试需要匹配的 URL'}\r\n        name={'tempUrl'}\r\n        rules={[\r\n          { required: true, message: '测试需要匹配的 URL 不能为空' },\r\n          {\r\n            type: 'url',\r\n            message: '测试需要匹配的 URL 必须是个 URL 啊喂 (#`O′)',\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Button\r\n          type=\"primary\"\r\n          htmlType={'submit'}\r\n          style={{\r\n            marginRight: 8,\r\n          }}\r\n        >\r\n          提交\r\n        </Button>\r\n        <Button htmlType={'reset'} onClick={onReset}>\r\n          清空\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default UnblockWebRestrictionsConfigForm\r\n","export function match(\r\n  href: URL,\r\n  config:\r\n    | string\r\n    | { type: 'domain' | 'link' | 'linkPrefix' | 'regex'; url: string },\r\n) {\r\n  if (typeof config === 'string') {\r\n    return href.host.includes(config)\r\n  } else {\r\n    const {type, url} = config\r\n    switch (type) {\r\n      case 'domain':\r\n        return href.host.includes(url)\r\n      case 'link':\r\n        return href.href === url\r\n      case 'linkPrefix':\r\n        return href.href.startsWith(url)\r\n      case 'regex':\r\n        return new RegExp(url).test(href.href)\r\n    }\r\n  }\r\n}\r\n","import * as React from 'react'\r\nimport { Button, List, Switch, Tag } from 'antd'\r\nimport { configTypeLabelMap } from '../constant/configTypeLabelMap'\r\ntype BlockConfig = UnblockWebRestrictions.BlockConfig\r\n\r\ntype PropsType = {\r\n  list: BlockConfig[]\r\n  onRemove: (config: BlockConfig) => void\r\n  onSwitch: (config: BlockConfig) => void\r\n}\r\n\r\n/**\r\n * 屏蔽列表\r\n */\r\nconst UnblockWebRestrictionsConfigList: React.FC<PropsType> = (props) => {\r\n  return (\r\n    <div>\r\n      <h2>本地屏蔽配置列表</h2>\r\n      <List\r\n        dataSource={props.list}\r\n        renderItem={(config: BlockConfig, i: number) => (\r\n          <List.Item\r\n            key={i}\r\n            actions={[\r\n              <Switch\r\n                checked={config.enable}\r\n                onChange={() => props.onSwitch(config)}\r\n              />,\r\n              <Button\r\n                type={'danger' as any}\r\n                onClick={() => props.onRemove(config)}\r\n              >\r\n                删除\r\n              </Button>,\r\n            ]}\r\n          >\r\n            <List.Item.Meta\r\n              title={\r\n                <div>\r\n                  <Tag>{configTypeLabelMap[config.type]}</Tag>\r\n                  <span\r\n                    style={{\r\n                      overflow: 'hidden',\r\n                      textOverflow: 'ellipsis',\r\n                      whiteSpace: 'nowrap',\r\n                    }}\r\n                    title={config.url}\r\n                  >\r\n                    {config.type === 'regex' ? (\r\n                      config.url\r\n                    ) : (\r\n                      <a\r\n                        href={\r\n                          (config.type === 'domain' ? 'https://' : '') +\r\n                          config.url\r\n                        }\r\n                      >\r\n                        {config.url}\r\n                      </a>\r\n                    )}\r\n                  </span>\r\n                </div>\r\n              }\r\n              description={<div>{config.enable}</div>}\r\n            />\r\n          </List.Item>\r\n        )}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UnblockWebRestrictionsConfigList\r\n","import * as React from 'react'\nimport { useState } from 'react'\nimport { Button, message } from 'antd'\nimport UnblockWebRestrictionsConfigForm from './component/UnblockWebRestrictionsConfigForm'\nimport UnblockWebRestrictionsConfigList from './component/UnblockWebRestrictionsConfigList'\nimport BasicLayoutCard from '../../components/layout/BasicLayoutCard'\nimport LayoutEmpty from '../../components/layout/LayoutEmpty'\ntype BlockConfig = UnblockWebRestrictions.BlockConfig\n\ntype PropsType = {}\n\nconst configBlockApi = window[\n  'com.rxliuli.UnblockWebRestrictions.configBlockApi'\n]!\n\nconst UnblockWebRestrictionsConfigNotEmpty: React.FC<PropsType> = () => {\n  const [configList, setConfigList] = useState(() => configBlockApi.list())\n\n  function handleReload() {\n    const list = configBlockApi.list()\n    setConfigList(list)\n    console.log('reload: ', list)\n  }\n  function handleClear() {\n    configBlockApi.clear()\n    handleReload()\n    message.success('清空成功')\n  }\n\n  async function handleUpdate() {\n    await configBlockApi.update()\n    handleReload()\n    message.success('更新成功')\n  }\n\n  function handleRemove(config: BlockConfig) {\n    console.log('remove key: ', config.key)\n    configBlockApi.remove(config.key)\n    handleReload()\n    message.success('删除成功')\n  }\n\n  function handleSwitch(config: BlockConfig) {\n    console.log('handleSwitch: ', config)\n    configBlockApi.switch(config.key)\n    handleReload()\n  }\n\n  return (\n    <BasicLayoutCard\n      title={'配置页'}\n      extra={\n        <div>\n          <Button\n            type=\"primary\"\n            onClick={handleClear}\n            style={{ marginRight: 8 }}\n          >\n            清空\n          </Button>\n          <Button type=\"primary\" onClick={handleUpdate}>\n            更新\n          </Button>\n        </div>\n      }\n    >\n      <UnblockWebRestrictionsConfigForm onReload={handleReload} />\n      <UnblockWebRestrictionsConfigList\n        list={configList}\n        onRemove={handleRemove}\n        onSwitch={handleSwitch}\n      />\n    </BasicLayoutCard>\n  )\n}\nconst UnblockWebRestrictionsConfig: React.FC<PropsType> = () => {\n  return !configBlockApi ? (\n    <LayoutEmpty\n      title=\"您还未安装解除网页禁止复制/粘贴的脚本\"\n      href={'https://greasyfork.org/zh-CN/scripts/391193'}\n    />\n  ) : (\n    <UnblockWebRestrictionsConfigNotEmpty />\n  )\n}\n\nexport default UnblockWebRestrictionsConfig\n"],"sourceRoot":""}